% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wav_1dconv.R
\name{wav_1dconv}
\alias{wav_1dconv}
\title{Convert WAV files into 1D convulotion raw data}
\usage{
wav_1dconv(db, path, location, make, model, serial, channel = c("left",
  "right"), te_factor = 1, max_length = 30, window_ms = 1,
  overlap = 0.9, frequency_range = c(14000, 142000),
  amplitude_range = c(10, 70), resolution = c(0.25, 2),
  threshold = 20)
}
\arguments{
\item{db}{A soundclusterDatabase object.
Create it with \code{\link{connect_db}}.}

\item{path}{the path to the wav files zou want to handle.
Note that it will recursively look into the path.}

\item{location}{the location where you recorded the wav files.}

\item{make}{the make of the device.}

\item{model}{the model of the device.}

\item{serial}{the optional serial number of the device.}

\item{channel}{Select the left or the right channel}

\item{te_factor}{The factor to which the original sound was slowed down prior
to recording}

\item{max_length}{Maximum length of the recording to use in seconds. If the
recording is longer, the last part is ignored.}

\item{window_ms}{The size of the window in microseconds. Default to 1.}

\item{overlap}{The overlap of two windows. Defaults to 0.9.}

\item{frequency_range}{the range of frequencies to use in Hz. Frequencies below the minimum or above the maximum are removed from the spectrogram. Defaults to 10000 (10 kHz) and 130000 (130 kHz).}

\item{amplitude_range}{The relevant range in relative amplitude.
First we rescale the raw amplitude by substracting the median amplitude of
the recording.
Then we clamp the relative values to the amplitude range.
Defaults to \code{c(10, 70)}.}

\item{resolution}{required resolution for the 1D convolution.
Time in milliseconds and frequency in kHz.
Default to \code{c(0.25, 2)}}

\item{threshold}{the threshold in relative dB that defines a sound.
Defaults to \code{20}.}
}
\value{
invisible NULL
}
\description{
Convert WAV files into 1D convulotion raw data
}
